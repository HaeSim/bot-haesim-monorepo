version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: ${NODE_ENV:-development}
    volumes:
      # 개발 환경에서만 볼륨 마운트 (NODE_ENV=development 일 때)
      - ./apps/api/src:/usr/src/app/apps/api/src
    command: sh -c "if [ \"$${NODE_ENV:-development}\" = \"development\" ]; then pnpm --filter api dev; else node dist/main; fi"
    ports:
      - '${API_PORT:-8080}:8080'
    networks:
      - app-network
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=8080
      - API_PREFIX=${API_PREFIX:-}
      - OLLAMA_API_URL=http://ollama:11434
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '-q',
          '--spider',
          'http://localhost:8080/health',
          '||',
          'exit',
          '1',
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: ${NODE_ENV:-development}
    volumes:
      # 개발 환경에서만 볼륨 마운트 (NODE_ENV=development 일 때)
      - ./apps/web/src:/usr/src/app/apps/web/src
      - ./apps/web/public:/usr/src/app/apps/web/public
    command: sh -c "if [ \"$${NODE_ENV:-development}\" = \"development\" ]; then pnpm --filter web dev; else node .next/standalone/server.js; fi"
    ports:
      - '${WEB_PORT:-3000}:3000'
    networks:
      - app-network
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-/api/v1}
      - API_SERVER_URL=http://api:8080
      - OLLAMA_API_URL=http://ollama:11434
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '-q',
          '--spider',
          'http://localhost:3000',
          '||',
          'exit',
          '1',
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  ollama:
    build:
      context: ./apps/ollama
      dockerfile: Dockerfile
    ports:
      - '${OLLAMA_PORT:-11434}:11434'
    restart: unless-stopped
    volumes:
      - ollama-models:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=-1
    networks:
      - app-network
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:11434/api/version',
          '||',
          'exit',
          '1',
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

volumes:
  ollama-models:
    # 모델 데이터 영구 보존으로 재시작/배포 시간 단축

networks:
  app-network:
    driver: bridge
